# Task 1: Cast the Columns of the orders_table to the Correct Data Types

We'll change the data types in the orders_table:

-- Change data types in orders_table
ALTER TABLE orders_table
    ALTER COLUMN date_uuid TYPE UUID USING date_uuid::UUID,
    ALTER COLUMN user_uuid TYPE UUID USING user_uuid::UUID,
    ALTER COLUMN card_number TYPE VARCHAR(50),
    ALTER COLUMN store_code TYPE VARCHAR(50),
    ALTER COLUMN product_code TYPE VARCHAR(50),
    ALTER COLUMN product_quantity TYPE SMALLINT;

# Task 2: Cast the Columns of the dim_users to the Correct Data Types

-- Change data types in dim_users
ALTER TABLE dim_users
    ALTER COLUMN first_name TYPE VARCHAR(255),
    ALTER COLUMN last_name TYPE VARCHAR(255),
    ALTER COLUMN date_of_birth TYPE DATE USING date_of_birth::DATE,
    ALTER COLUMN country_code TYPE VARCHAR(50),
    ALTER COLUMN user_uuid TYPE UUID USING user_uuid::UUID,
    ALTER COLUMN join_date TYPE DATE USING join_date::DATE;

# Task 3: Update the dim_store_details Table

-- Merge latitude columns and change data types in dim_store_details
ALTER TABLE dim_store_details
    DROP COLUMN latitude_old,  -- Assume latitude_old is the duplicate column
    ALTER COLUMN longitude TYPE FLOAT USING longitude::FLOAT,
    ALTER COLUMN locality TYPE VARCHAR(255),
    ALTER COLUMN store_code TYPE VARCHAR(50),
    ALTER COLUMN staff_numbers TYPE SMALLINT USING staff_numbers::SMALLINT,
    ALTER COLUMN opening_date TYPE DATE USING opening_date::DATE,
    ALTER COLUMN store_type TYPE VARCHAR(255),
    ALTER COLUMN latitude TYPE FLOAT USING latitude::FLOAT,
    ALTER COLUMN country_code TYPE VARCHAR(50),
    ALTER COLUMN continent TYPE VARCHAR(255);

-- Change 'N/A' to NULL in location column
UPDATE dim_store_details
SET location = NULL
WHERE location = 'N/A';

# Task 4: Make Changes to the dim_products Table

1. Remove the £ Character from product_price:

-- Remove £ character from product_price
UPDATE dim_products
SET product_price = REPLACE(product_price, '£', '')::FLOAT;

2. Add weight_class Column:

-- Add weight_class column
ALTER TABLE dim_products
ADD COLUMN weight_class VARCHAR(50);

-- Update weight_class based on weight range
UPDATE dim_products
SET weight_class = CASE
    WHEN weight < 2 THEN 'Light'
    WHEN weight >= 2 AND weight < 40 THEN 'Mid_Sized'
    WHEN weight >= 40 AND weight < 140 THEN 'Heavy'
    ELSE 'Truck_Required'
END;

3. Change Data Types in dim_products:

-- Change data types in dim_products
ALTER TABLE dim_products
    ALTER COLUMN product_price TYPE FLOAT USING product_price::FLOAT,
    ALTER COLUMN weight TYPE FLOAT USING weight::FLOAT,
    ALTER COLUMN EAN TYPE VARCHAR(50),
    ALTER COLUMN product_code TYPE VARCHAR(50),
    ALTER COLUMN date_added TYPE DATE USING date_added::DATE,
    ALTER COLUMN uuid TYPE UUID USING uuid::UUID,
    ALTER COLUMN still_available TYPE BOOL USING still_available::BOOL,
    ALTER COLUMN weight_class TYPE VARCHAR(50);

#Task 5: Update the dim_date_times Table

-- Change data types in dim_date_times
ALTER TABLE dim_date_times
    ALTER COLUMN month TYPE VARCHAR(50),
    ALTER COLUMN year TYPE VARCHAR(50),
    ALTER COLUMN day TYPE VARCHAR(50),
    ALTER COLUMN time_period TYPE VARCHAR(50),
    ALTER COLUMN date_uuid TYPE UUID USING date_uuid::UUID;

#Task 6: Update the dim_card_details Table

1. Determine the Lengths of Each Variable:

-- Example: Determine maximum length for card_number
SELECT MAX(LENGTH(card_number)) FROM dim_card_details;

2.Change Data Types:

-- Change data types in dim_card_details
ALTER TABLE dim_card_details
    ALTER COLUMN card_number TYPE VARCHAR(20),
    ALTER COLUMN expiry_date TYPE VARCHAR(10),
    ALTER COLUMN date_payment_confirmed TYPE DATE USING date_payment_confirmed::DATE;

#Task 7: Create Primary Keys in the Dimension Tables
-- Add primary keys
ALTER TABLE dim_users ADD PRIMARY KEY (user_uuid);
ALTER TABLE dim_store_details ADD PRIMARY KEY (store_code);
ALTER TABLE dim_products ADD PRIMARY KEY (product_code);
ALTER TABLE dim_date_times ADD PRIMARY KEY (date_uuid);
ALTER TABLE dim_card_details ADD PRIMARY KEY (card_number);

#Task 8: Add Foreign Keys to the orders_table

-- Add primary keys
ALTER TABLE dim_users ADD PRIMARY KEY (user_uuid);
ALTER TABLE dim_store_details ADD PRIMARY KEY (store_code);
ALTER TABLE dim_products ADD PRIMARY KEY (product_code);
ALTER TABLE dim_date_times ADD PRIMARY KEY (date_uuid);
ALTER TABLE dim_card_details ADD PRIMARY KEY (card_number);
